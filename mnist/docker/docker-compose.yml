version: '3.8'

networks:
 app_network:
    name: ${COMPOSE_PROJECT_NAME}
    driver: bridge

services:

  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
      args:
        - NGINX_VERSION=${NGINX_VERSION}
        - APP_DOMAIN=${APP_DOMAIN}
    container_name: ${COMPOSE_PROJECT_NAME}_nginx
    depends_on:
      - php
      - mysql
      - python
    ports:
      - ${HTTP_ON_HOST}:80
      - ${HTTPS_ON_HOST}:443
    volumes:
      - ${PATH_TO_CODE}:/var/www/html
    networks:
      - app_network

  python:
    platform: linux/amd64
    build:
      context: .
      dockerfile: python.dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}_python
    volumes:
      - ${PATH_TO_CODE}:/var/www/html
    working_dir: /var/www/html
    networks:
      - app_network
    entrypoint: ["tail", "-f", "/dev/null"]

  php:
    platform: linux/amd64
    build:
      context: .
      dockerfile: php.dockerfile
      args:
        - PHP_VERSION=${PHP_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_php_${PHP_VERSION}
    volumes:
      - ${PATH_TO_CODE}:/var/www/html
    networks:
      - app_network

  mysql:
    #image: mariadb:${MARIADB_VERSION}
    image: mysql:${MYSQL_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_mysql
    ports:
      - ${MYSQL_ON_HOST}:3306
    volumes:
      - ./database/data:/var/lib/mysql
    networks:
      - app_network
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}

  composer:
    platform: linux/amd64
    build:
      context: .
      dockerfile: php.dockerfile
      args:
        - PHP_VERSION=${PHP_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_composer_${PHP_VERSION}
    volumes:
      - ${PATH_TO_CODE}:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["php", "/bin/composer.phar"]
    networks:
      - app_network

  artisan:
    platform: linux/amd64
    build:
      context: .
      dockerfile: php.dockerfile
      args:
        - PHP_VERSION=${PHP_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_artisan_${PHP_VERSION}
    volumes:
      - ${PATH_TO_CODE}:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["php", "artisan"]
    networks:
      - app_network

  npm:
    image: node:${NODE_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_npm
    volumes:
      - ${PATH_TO_CODE}:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["npm"]
    networks:
      - app_network

  phpunit:
    platform: linux/amd64
    build:
      context: .
      dockerfile: php.dockerfile
      args:
        - PHP_VERSION=${PHP_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_phpunit_${PHP_VERSION}
    volumes:
      - ${PATH_TO_CODE}:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["/var/www/html/vendor/bin/phpunit"]
    networks:
      - app_network

  cron:
    platform: linux/amd64
    build:
      context: .
      dockerfile: php.dockerfile
      args:
        - PHP_VERSION=${PHP_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_cron_${PHP_VERSION}
    volumes:
      - ${PATH_TO_CODE}:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["crond", "-f"]
    networks:
      - app_network

